Below is the list of all symbols which may be used by the lexer in order to interact with the outer world.
These symbols should be defined by the user,
either in the form of inplace configurations,
or as C/C++ variables, functions, macros and other language constructs.
Which primitives are necessary depends on the particular use case.

``yyaccept``
    L-value of unsigned integral type that is used to hold the number of the last matched rule.
    Explicit definition by the user is necessary only with ``-f`` ``--storable-state`` option.

``YYBACKUP ()``
    Backup current input position (used only with ``--input custom`` option).

``YYBACKUPCTX ()``
    Backup current input position for trailing context (used only with  ``--input custom`` option).

``yych``
    L-value of type ``YYCTYPE`` that is used to hold current input character.
    Explicit definition by the user is necessary only with ``-f`` ``--storable-state`` option.

``YYCONDTYPE``
    The type of *condition* identifiers (used only with ``-c`` ``--conditions`` option).
    Should be generated either with ``/*!types:re2c*/`` directive, or with ``-t`` ``--type-header`` option.

``YYCTXMARKER``
    L-value of type ``YYCTYPE *`` that is used to backup input position of trailing context.
    It is needed only if regular expressions use the lookahead operator ``/``.

``YYCTYPE``
    The type of the input characters (*code units*).
    Usually it should be ``unsigned char`` for ASCII, EBCDIC and UTF-8 encodings,
    ``unsigned short`` for UTF-16 or UCS-2 encodings,
    and ``unsigned int`` for UTF-32 encoding.

``YYCURSOR``
    L-value of type ``YYCTYPE *`` that is used as a pointer to the current input symbol.
    Initially ``YYCURSOR`` points to the first character and is advanced by the lexer during matching.
    When a rule matches, ``YYCURSOR`` points past the last character of the matched string.

``YYDEBUG (state, symbol)``
    A function-like primitive that is used to dump debug information (only used with ``-d`` ``--debug-output`` option).
    ``YYDEBUG`` should return no value and accept two arguments:
    ``state`` (either lexer state or ``-1``) and ``symbol`` (current input symbol).

``YYFILL (n)``
    A function-like primitive that is called by the lexer when there is not enough input.
    ``YYFILL`` should return no value and supply at least ``n`` additional characters.
    Maximal value of ``n`` equals ``YYMAXFILL``, which can be obtained with the ``/*!max:re2c*/`` directive.

``YYGETCONDITION ()``
    R-value of type ``YYCONDTYPE`` that represents current *condition* identifier (used only with ``-c`` ``--conditions`` option).

``YYGETSTATE ()``
    R-value of signed integral type that represents current lexer state (used only with ``-f`` ``--storable-state`` option).
    Initial value of lexer state should be ``-1``.

``YYLESSTHAN (n)``
    R-value of boolean type that is ``true`` if and only if there is less than ``n`` input characters left (used only with  ``--input custom`` option).

``YYLIMIT``
    R-value of type ``YYCTYPE *`` that marks the end of input (``YYLIMIT[-1]`` should be the last input character).
    Lexer compares ``YYCURSOR`` and ``YYLIMIT`` in order to determine if there is enough input characters left.

``YYMARKER``
    L-value of type ``YYCTYPE *`` used to backup input position of successful match.
    This might be necessary if there is an overlapping longer rule that might also match.

``YYMTAGP (t)``
    Append current input position to the history of *m-tag* ``t`` (used only with ``-T`` ``--tags`` option).

``YYMTAGN (t)``
    Append default value to the history of *m-tag* ``t`` (used only with ``-T`` ``--tags`` option).

``YYMAXFILL``
    Integral constant that denotes maximal value of ``YYFILL`` argument
    and is autogenerated by ``/*!max:re2c*/`` directive.

``YYMAXNMATCH``
    Integral constant that denotes maximal number of capturing groups in a rule
    and is autogenerated by ``/*!maxnmatch:re2c*/`` directive (used only with ``--posix-captures`` option).

``yynmatch``
    L-value of unsigned integral type that is used to hold the number of capturing groups in the matching rule.
    Used only with ``-P`` ``--posix-captures`` option.

``YYPEEK ()``
    R-value of type ``YYCTYPE`` that denotes current input character (used only with ``--input custom`` option).

``yypmatch``
    An array of l-values that are used to hold the values of *s-tags* 
    corresponding to the capturing parentheses in the matching rule.
    The length of array must be at least ``yynmatch * 2`` (ideally ``YYMAXNMATCH * 2``).
    Used only with ``-P`` ``--posix-captures`` option.

``YYRESTORE ()``
    Restore input position (used only with ``--input custom`` option).

``YYRESTORECTX ()``
    Restore input position from the value of trailing context (used only with ``--input custom`` option).

``YYRESTORETAG (t)``
    Restore input position from the value of *s-tag* ``t`` (used only with ``--input custom`` option).

``YYSETCONDITION (condition)``
    Set current *condition* identifier to ``condition`` (used only with ``-c`` ``--conditions`` option).

``YYSETSTATE (state)``
    Set current lexer state to ``state`` (used only with ``-f`` ``--storable-state`` option).
    Parameter ``state`` is of signed integral type.

``YYSKIP ()``
    Advance input position to the next character (used only with generic API).

``YYSTAGP (t)``
    Save current input position to *s-tag* ``t`` (used only with ``-T`` ``--tags`` and ``--input custom`` option).

``YYSTAGN (t)``
    Save default value to *s-tag* ``t`` (used only with ``-T`` ``--tags`` and ``--input custom`` options).

