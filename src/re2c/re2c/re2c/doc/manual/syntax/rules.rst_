
Rules consist of a regular expression followed by a user-defined action:
a block of C/C++ code that is executed in case of sucessful match.
Action can be either an arbitrary block of code enclosed in curly braces ``{`` and ``}``
or a block of code without curly braces preceded with ``:=`` and ended with a newline that is not followed by a whitespace.

If multiple rules match, ``re2c`` prefers the longest match.
If rules match the same string, the earlier rule has priority.

There is one special kind of rule: the *default rule* with ``*`` instead of the regular expression.
It always has the lowest priority, matches any *code unit* (either valid or invalid) and consumes exactly one *code unit*.
Note that *default rule* is not the same as ``[^]``, which
matches any valid *code point* and can consume multiple *code units*.
In case of variable-length encodings ``*`` is the only possible way to match invalid input character.

If ``-c`` ``--conditions`` option is used, then rules have more complex form
described in the section about conditions.
